{{- $peeringBasic := (merge (dict "name" "remote-peering-basic" "module" "discovery") .) -}}
{{- $peeringIncoming := (merge (dict "name" "remote-peering-incoming" "module" "discovery") .) -}}
{{- $peeringOutgoing := (merge (dict "name" "remote-peering-outgoing" "module" "discovery") .) -}}
{{- $crdReplicatorConfig := (merge (dict "name" "crd-replicator" "module" "dispatcher") .) -}}

{{- $authConfig := (merge (dict "name" "auth" "module" "discovery") .) -}}
{{- $discoveryConfig := (merge (dict "name" "discovery" "module" "discovery") .) -}}

# to be enabled with the creation of the Tenant Control Namespace,
# this ClusterRole has the basic permissions to give to a remote cluster
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "liqo.prefixedName" $peeringBasic }}
{{ .Files.Get (include "liqo.cluster-role-filename" (dict "prefix" ( include "liqo.prefixedName" $peeringBasic))) }}

---
# to be enabled when a ResourceRequest has been accepted,
# this ClusterRole has the permissions required to a remote cluster to manage an outgoing peering (incoming for the local cluster),
# when the Pods will be offloaded to the local cluster
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "liqo.prefixedName" $peeringIncoming }}
{{ .Files.Get (include "liqo.cluster-role-filename" (dict "prefix" ( include "liqo.prefixedName" $peeringIncoming))) }}

---
# to be enabled when we send a ResourceRequest,
# this ClusterRole has the permissions required to a remote cluster to manage an incoming peering (outgoing for the local cluster),
# when the Pods will be offloaded from the local cluster
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "liqo.prefixedName" $peeringOutgoing }}
{{ .Files.Get (include "liqo.cluster-role-filename" (dict "prefix" ( include "liqo.prefixedName" $peeringOutgoing))) }}


---
# tenant control namespace management

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "liqo.prefixedName" $peeringBasic }}
  labels:
    {{- include "liqo.labels" $authConfig | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "liqo.prefixedName" $authConfig }}
    namespace: {{ .Release.Namespace }}
  - kind: ServiceAccount
    name: {{ include "liqo.prefixedName" $discoveryConfig }}
    namespace: {{ .Release.Namespace }}
  - kind: ServiceAccount
    name: {{ include "liqo.prefixedName" $crdReplicatorConfig }}
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "liqo.prefixedName" $peeringBasic }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "liqo.prefixedName" $peeringIncoming }}
  labels:
    {{- include "liqo.labels" $authConfig | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "liqo.prefixedName" $authConfig }}
    namespace: {{ .Release.Namespace }}
  - kind: ServiceAccount
    name: {{ include "liqo.prefixedName" $discoveryConfig }}
    namespace: {{ .Release.Namespace }}
  - kind: ServiceAccount
    name: {{ include "liqo.prefixedName" $crdReplicatorConfig }}
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "liqo.prefixedName" $peeringIncoming }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "liqo.prefixedName" $peeringOutgoing }}
  labels:
    {{- include "liqo.labels" $authConfig | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "liqo.prefixedName" $authConfig }}
    namespace: {{ .Release.Namespace }}
  - kind: ServiceAccount
    name: {{ include "liqo.prefixedName" $discoveryConfig }}
    namespace: {{ .Release.Namespace }}
  - kind: ServiceAccount
    name: {{ include "liqo.prefixedName" $crdReplicatorConfig }}
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "liqo.prefixedName" $peeringOutgoing }}
